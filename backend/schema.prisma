// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                     String                  @id @default(cuid())
  name                   String                  @default("")
  email                  String                  @unique @default("")
  password               String
  createdAt              DateTime?               @default(now())
  role                   String?
  symptomReports         SymptomReport[]         @relation("SymptomReport_user")
  therapeuticAssignments TherapeuticAssignment[] @relation("TherapeuticAssignment_user")
  therapeuticCaptures    TherapeuticCapture[]    @relation("TherapeuticCapture_user")
  participatedStudies    Study[]                 @relation("Study_participants")
  coordinatedStudies     Study[]                 @relation("Study_coordinators")
}

model Symptom {
  id   String @id @default(cuid())
  name String @default("")
}

model SymptomReport {
  id         String   @id @default(cuid())
  user       User?    @relation("SymptomReport_user", fields: [userId], references: [id])
  userId     String?  @map("user")
  occurredOn DateTime
  symptom    String   @default("")
  notes      String   @default("")

  @@index([userId])
}

model Therapeutic {
  id      String  @id @default(cuid())
  name    String  @default("")
  study   Study?  @relation("Therapeutic_study", fields: [studyId], references: [id])
  studyId String? @map("study")

  @@index([studyId])
}

model TherapeuticAssignment {
  id                         String                      @id @default(cuid())
  user                       User?                       @relation("TherapeuticAssignment_user", fields: [userId], references: [id])
  userId                     String?                     @map("user")
  study                      Study?                      @relation("TherapeuticAssignment_study", fields: [studyId], references: [id])
  studyId                    String?                     @map("study")
  quantity                   Int
  therapeuticAssignmentSteps TherapeuticAssignmentStep[] @relation("TherapeuticAssignmentStep_therapeuticAssignment")
  startDate                  DateTime
  endDate                    DateTime

  @@index([userId])
  @@index([studyId])
}

model TherapeuticAssignmentStep {
  id                      String                 @id @default(cuid())
  therapeuticAssignment   TherapeuticAssignment? @relation("TherapeuticAssignmentStep_therapeuticAssignment", fields: [therapeuticAssignmentId], references: [id])
  therapeuticAssignmentId String?                @map("therapeuticAssignment")
  index                   Int
  direction               String                 @default("")
  therapeuticCapture      TherapeuticCapture?    @relation("TherapeuticAssignmentStep_therapeuticCapture", fields: [therapeuticCaptureId], references: [id])
  therapeuticCaptureId    String?                @map("therapeuticCapture")

  @@index([therapeuticAssignmentId])
  @@index([therapeuticCaptureId])
}

model TherapeuticCapture {
  id                         String                      @id @default(cuid())
  user                       User?                       @relation("TherapeuticCapture_user", fields: [userId], references: [id])
  userId                     String?                     @map("user")
  occurredOn                 DateTime
  therapeuticAssignmentSteps TherapeuticAssignmentStep[] @relation("TherapeuticAssignmentStep_therapeuticCapture")

  @@index([userId])
}

model Study {
  id                     String                  @id @default(cuid())
  name                   String                  @default("")
  description            String                  @default("")
  therapeutics           Therapeutic[]           @relation("Therapeutic_study")
  therapeuticAssignments TherapeuticAssignment[] @relation("TherapeuticAssignment_study")
  participants           User[]                  @relation("Study_participants")
  coordinators           User[]                  @relation("Study_coordinators")
  startDate              DateTime                @default(now())
  endDate                DateTime                @default(now())
}
